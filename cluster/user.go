// Code generated by goagen v1.3.0, DO NOT EDIT.
//
// API "cluster": user Resource Client
//
// Command:
// $ goagen
// --design=github.com/fabric8-services/fabric8-cluster/design
// --out=$(GOPATH)/src/github.com/fabric8-services/fabric8-cluster-client
// --pkg=cluster
// --version=v1.3.0

package cluster

import (
	"context"
	"fmt"
	"net/http"
	"net/url"
)

// ClustersUserPath computes a request path to the clusters action of user.
func ClustersUserPath() string {

	return fmt.Sprintf("/api/user/clusters")
}

// Get clusters available to user
func (c *Client) ClustersUser(ctx context.Context, path string) (*http.Response, error) {
	req, err := c.NewClustersUserRequest(ctx, path)
	if err != nil {
		return nil, err
	}
	return c.Client.Do(ctx, req)
}

// NewClustersUserRequest create the request corresponding to the clusters action endpoint of the user resource.
func (c *Client) NewClustersUserRequest(ctx context.Context, path string) (*http.Request, error) {
	scheme := c.Scheme
	if scheme == "" {
		scheme = "http"
	}
	u := url.URL{Host: c.Host, Scheme: scheme, Path: path}
	req, err := http.NewRequest("GET", u.String(), nil)
	if err != nil {
		return nil, err
	}
	if c.JWTSigner != nil {
		c.JWTSigner.Sign(req)
	}
	return req, nil
}
